/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.URL;
import javax.net.ssl.HttpsURLConnection;
import org.jdesktop.swingx.JXPanel;
import pearson.dictionary.DictionaryResults;
import pearson.dictionary.Result;
import pearson.dictionary.Sense;

/**
 *
 * @author Nathan Smith
 */
public class DictionaryPanel extends JXPanel {

    /**
     * Creates new form DictionaryPanel
     */
    public DictionaryPanel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextBox = new org.jdesktop.swingx.JXTextField();
        searchButton = new org.jdesktop.swingx.JXButton();
        dictionaryComboBox = new org.jdesktop.swingx.JXComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTextArea = new org.jdesktop.swingx.JXTextArea();

        searchTextBox.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N

        searchButton.setText("Search");
        searchButton.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        dictionaryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Longman Dictionary of Contemporary English", "Longman Active Study Dictionary", "Longman Wordwise Dictionary", "Longman Advanced American Dictionary" }));
        dictionaryComboBox.setFont(new java.awt.Font("Gill Sans MT", 0, 14)); // NOI18N

        resultsTextArea.setEditable(false);
        resultsTextArea.setColumns(20);
        resultsTextArea.setLineWrap(true);
        resultsTextArea.setRows(5);
        jScrollPane1.setViewportView(resultsTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dictionaryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dictionaryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String dictionary = dictionaryComboBox.getSelectedItem().toString();
        String dictionaryUrl = "https://api.pearson.com/v2/dictionaries/";

        switch (dictionary) {
            case "Longman Dictionary of Contemporary English":
                dictionaryUrl = dictionaryUrl + "ldoce5/";
                break;
            case "Longman Active Study Dictionary":
                dictionaryUrl = dictionaryUrl + "lasde/";
                break;
            case "Longman Wordwise Dictionary":
                dictionaryUrl = dictionaryUrl + "wordwise/";
                break;
            case "Longman Advanced American Dictionary":
                dictionaryUrl = dictionaryUrl + "laad3/";
                break;
            default:
                break;
        }

        dictionaryUrl = dictionaryUrl + "entries?search=" + searchTextBox.getText() + "&limit=25&apikey=15e4295d-3df5-4ae8-9727-b6a821003dd9";
        resultsTextArea.setText("");
        try {
            URL apiUrl = new URL(dictionaryUrl);
            HttpsURLConnection httpConn = (HttpsURLConnection) apiUrl.openConnection();
            httpConn.setRequestMethod("GET");

            int responseCode = httpConn.getResponseCode();
            if (responseCode == 200) {
                ObjectMapper mapper = new ObjectMapper();
                mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);
                DictionaryResults newResults = mapper.readValue(httpConn.getInputStream(), DictionaryResults.class);

                for (Result items : newResults.getResults()) {
                    resultsTextArea.append(items.getHeadword());
                    for (Sense sense : items.getSenses()) {
                        for (String definition : sense.getDefinition()) {
                            resultsTextArea.append("\n" + definition);
                        }
                    }

                    resultsTextArea.append("\n\n");
                }
            }
        } catch (RuntimeException rex) {
            throw rex;
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_searchButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXComboBox dictionaryComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTextArea resultsTextArea;
    private org.jdesktop.swingx.JXButton searchButton;
    private org.jdesktop.swingx.JXTextField searchTextBox;
    // End of variables declaration//GEN-END:variables
}
